version: '2'

services:
  
  app:
    image: rocketchat/rocket.chat:latest
    restart: unless-stopped
    volumes:
      - ./data/app/uploads:/app/uploads
    environment:
      - PORT=3000
      - ROOT_URL=http://chat.${DOMAIN}
      - MONGO_URL=mongodb://db:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://db:27017/local
#      - MAIL_URL=smtp://smtp.email
      - HTTP_PROXY=http://chat.${DOMAIN}
      - HTTPS_PROXY=http://chat.${DOMAIN}
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.backend=chat"
      - "traefik.frontend.rule=Host:chat.${DOMAIN}"
      - "traefik.port=3000"
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - chat-db

  db:
    image: mongo:3.2
    restart: unless-stopped
    volumes:
     - ./data/db:/data/db
     #- ./data/db/dump:/dump
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    labels:
      - "traefik.enable=false"
    networks:
      - chat-db

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  db-init:
    image: mongo:3.2
    command: 'mongo db/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})"'
    depends_on:
      - db
    networks:
      - chat-db


networks:
  chat-db: {}
  proxy:
    external: true
